STATEMENT_SEQUENCE -> SENTENCE STATEMENT_SEQUENCE
STATEMENT_SEQUENCE -> ' '
SENTENCE -> VAR ID ;
SENTENCE -> ID = EXPRESSION ;
SENTENCE -> PRINT ( DISPLAY_LIST ) ;
SENTENCE -> WHILE ( EBOOL ) S 
SENTENCE -> { SENTENCE }
SENTENCE -> IF ( EBOOL ) S REST_IF
REST_IF -> ELSE SENTENCE
EXPRESSION -> TERM EPRIME
EPRIME -> + TERM EPRIME
EPRIME -> - TERM EPRIME
EPRIME -> ' '
TERM -> FACTOR TPRIME
TPRIME -> * FACTOR FPRIME
TPRIME -> / FACTOR FPRIME
TPRIME -> ' '
FACTOR -> ID
FACTOR -> NUMBER
F -> ( EXPRESSION )
EBOOL -> EXPRESSION == EXPRESSION
EBOOL -> EXPRESSION >= EXPRESSION
EBOOL -> EXPRESSION <= EXPRESSION
EBOOL -> EXPRESSION != EXPRESSION
EBOOL -> EXPRESSION < EXPRESSION
EBOOL -> EXPRESSION > EXPRESSION
EBOOL -> TRUE
EBOOL -> FALSE
DISPLAY_LIST -> ELEMENT ELEMENT_SEQUENCE
DISPLAY_LIST -> ' '
ELEMENT_SEQUENCE -> , ELEMENT ELEMENT_SEQUENCE
ELEMENT_SEQUENCE -> ' '
ELEMENT -> VAR
ELEMENT -> NUMBER
ELEMENT -> STRING

VAR -> CHARACTER (CHARACTER || DIGIT)*
NUMBER -> DIGIT (DIGIT)*
STRING -> " ANY_CHARACTER "
TRUE -> '#t'
FALSE -> '#f'